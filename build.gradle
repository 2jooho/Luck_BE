//querydsl 설정
buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}
plugins {
	id 'org.springframework.boot' version '2.7.10'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10' //querydsl 설정
//    id 'name.remal.sonarlint' version '1.4.1'
//    id "org.sonarqube" version "2.7"
//    id 'jacoco'
//    id "com.github.spotbugs" version "4.7.5"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

//ext{
//    lombokVersion = '1.18.24'
//    lombokMapstructBindVersion = '0.2.0'
//    mapStructVersion = '1.5.2.Final'
//    set('log4j2.version', '2.17.2')
//    // [2021-07-16] Dependency management for Spring Cloud AWS.
//    springCloudAwsVersion = '2.4.0'
//    springCloudVersion = '2021.0.2'
//}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	all {
		//logback과의 충돌 방지
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

repositories {
	mavenCentral()
}

//dependencyManagement {
//    imports {
//        mavenBom "io.awspring.cloud:spring-cloud-aws-dependencies:${springCloudAwsVersion}"
//        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
//    }
//}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//h2
//	runtimeOnly 'com.h2database:h2'
	//mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

	//querydsl 설정
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	// validation 체크용
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.6'
	// Jasypt
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'
	// log4j2
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'

	//spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//gson
	dependencies { implementation 'com.google.code.gson:gson:2.8.7' }

	/**************** Redis ******************/
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	/**************** SonarQube ******************/
//    implementation group: 'org.owasp.encoder', name: 'encoder', version: '1.2.3'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'

    // SpotBugs
    implementation "com.github.spotbugs:spotbugs-annotations:4.7.1"
    annotationProcessor 'com.github.spotbugs:spotbugs-annotations:4.7.1'

    // Swagger
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'

    // test
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

     /**************** MapStruct ******************/
//    implementation "org.mapstruct:mapstruct:${mapStructVersion}"
//    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}", "org.projectlombok:lombok:${lombokVersion}", "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindVersion}"

    // poi (excel 업로드)
//    implementation 'org.apache.poi:poi:5.2.3'
//    implementation 'org.apache.poi:poi-ooxml:5.2.3'
//    implementation 'commons-io:commons-io:2.11.0'

//    //########## AWS SDK ##########//
//    implementation platform('software.amazon.awssdk:bom:2.16.64')
//    implementation 'com.amazonaws:aws-java-sdk-sts:1.12.187'
//    // KMS/Encryption SDK.
//    implementation 'com.amazonaws:aws-java-sdk-kms:1.12.187'
//    implementation 'com.amazonaws:aws-encryption-sdk-java:2.4.0'
//    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.4.0-b180830.0359'
//    // Spring Cloud AWS.
//    implementation 'io.awspring.cloud:spring-cloud-starter-aws-parameter-store-config'
//    implementation 'io.awspring.cloud:spring-cloud-starter-aws-secrets-manager-config'
//    implementation group: 'com.amazonaws.secretsmanager', name: 'aws-secretsmanager-jdbc', version: '1.0.6'
//    implementation group: 'com.amazonaws.secretsmanager', name: 'aws-secretsmanager-caching-java', version: '1.0.1'
//
//    //coolsms
    implementation 'net.nurigo:sdk:4.2.7'

    //view
//    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
//    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
//    implementation 'org.springframework.boot:spring-boot-devtools'
//    implementation 'org.webjars.bower:bootstrap:4.3.1'
//    implementation 'org.webjars.bower:vue:2.5.16'
//    implementation 'org.webjars.bower:axios:0.17.1'
//    implementation 'com.google.code.gson:gson:2.8.0'

    // apache
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

//querydsl 설정 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
//querydsl 설정 종료


//정적분석 설정
//
//build {
//    jar {
//        enabled = false // do not generate thin JAR file
//    }
//}
//
//test {
//    jacoco {
//        destinationFile = file("$buildDir/jacoco/jacoco.exec")
//    }
//    systemProperty 'spring.profiles.active', 'gradle-test'
//    useJUnitPlatform()
//    reports {
//        junitXml.destination(file("$buildDir/reports/test/test/junitXml"))
//        junitXml.enabled(true)
//        html.destination(file("$buildDir/reports/test/test/html"))
//        html.enabled(true)
//    }
//    finalizedBy 'jacocoTestReport'
//}
//
//// jacoco
//jacoco {
//    toolVersion = '0.8.5'
//}
//jacocoTestReport {
//    reports {
//        html.enabled true
//        xml.enabled true
//        csv.enabled false
//        xml.destination file("$buildDir/reports/jacoco/jacoco.xml")
//    }
//    finalizedBy 'jacocoTestCoverageVerification'
//}
//jacocoTestCoverageVerification {
//    violationRules {
//        rule {
//            // 'element'가 없으면 프로젝트의 전체 파일을 합친 값을 기준으로 한다.
//            limit {
//                counter = 'INSTRUCTION'
//                // 'counter'를 지정하지 않으면 default는 'INSTRUCTION'
//                // 'counter'에서 LINE은 라인 커버리지, INSTRUCTION은 실행되는 바이트 단위의 커버리지
//                // 'value'를 지정하지 않으면 default는 'COVEREDRATIO'
//                minimum = 0.60
//            }
//        }
//    }
//}
//task testCoverage(type: Test) {
//    group 'verification'
//    description 'Runs the unit tests with coverage'
//
//    dependsOn(':test',
//            ':jacocoTestReport',
//            ':jacocoTestCoverageVerification')
//
//    tasks['jacocoTestReport'].mustRunAfter(tasks['test'])
//    tasks['jacocoTestCoverageVerification'].mustRunAfter(tasks['jacocoTestReport'])
//}
//
////########## spotbugs ##########//
//spotbugs {
//    ignoreFailures = false // bug가 발견되면 report만 하고 프로젝트는 계속 진행
//    showStackTraces = false
//    showProgress = false
//    effort = 'max'
//    reportLevel = 'low'
////    visitors = [ 'FindSqlInjection', 'SwitchFallthrough' ]
////    omitVisitors = [ 'FindNonShortCircuit' ]
//    includeFilter = file("ruleset/findbugs-include_(V0.92)_proj.xml")
//    excludeFilter = file("ruleset/findbugs-exclude_(V0.92)_proj.xml")
//    reportsDir = file("$buildDir/reports/spotbugs")
//    maxHeapSize = '1g'
//    extraArgs = ['-nested:false']
//    jvmArgs = ['-Duser.language=en']
//}
//
//spotbugsTest.enabled(false)
////spotbugsIntegrationTest.enabled(false)
//
//spotbugsMain {
//    reports {
//        xml.enabled = false
//        xml.destination = file("$buildDir/reports/spotbugs")
//        html {
//            enabled = true
//            stylesheet = 'plain.xsl'
//        }
//    }
//
//    ignoreFailures = false // bug가 발견되면 report만 하고 프로젝트는 계속 진행
//}
//
//// SonarLint
//apply from: 'sonarlint.gradle'
//
//// Integration Test
//task integrationTest {
//    println 'TOBE.....'
//}